.TH "FieldService.Tests.Mocks.MockAssignmentService" 3 "Tue Jul 1 2014" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
FieldService.Tests.Mocks.MockAssignmentService \- 
.PP
This is just a mock service to bypass the \fBSQLite\fP database for speed during test runs  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBFieldService\&.IAssignmentService\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "Task< List< \fBAssignment\fP > > \fBGetAssignmentsAsync\fP (\fBCancellationToken\fP cancellationToken)"
.br
.RI "\fIGets a list of assignments \fP"
.ti -1c
.RI "Task< List< \fBItem\fP > > \fBGetItemsAsync\fP (\fBCancellationToken\fP cancellationToken)"
.br
.RI "\fIGets a list of items \fP"
.ti -1c
.RI "Task< List< \fBAssignmentItem\fP > > \fBGetItemsForAssignmentAsync\fP (\fBAssignment\fP assignment, \fBCancellationToken\fP cancellationToken)"
.br
.RI "\fIGets a list of items for an assignment \fP"
.ti -1c
.RI "Task< List< \fBLabor\fP > > \fBGetLaborForAssignmentAsync\fP (\fBAssignment\fP assignment, \fBCancellationToken\fP cancellationToken)"
.br
.RI "\fIGets a list of labor hours for an assignment \fP"
.ti -1c
.RI "Task< List< \fBExpense\fP > > \fBGetExpensesForAssignmentAsync\fP (\fBAssignment\fP assignment, \fBCancellationToken\fP cancellationToken)"
.br
.RI "\fIGets a list of expenses for an assignment \fP"
.ti -1c
.RI "Task< int > \fBSaveAssignmentAsync\fP (\fBAssignment\fP assignment, \fBCancellationToken\fP cancellationToken)"
.br
.RI "\fISaves an assignment \fP"
.ti -1c
.RI "Task< int > \fBSaveAssignmentItemAsync\fP (\fBAssignmentItem\fP assignmentItem, \fBCancellationToken\fP cancellationToken)"
.br
.RI "\fISaves an assignment item \fP"
.ti -1c
.RI "Task< int > \fBSaveLaborAsync\fP (\fBLabor\fP labor, \fBCancellationToken\fP cancellationToken)"
.br
.RI "\fISaves a labor entry \fP"
.ti -1c
.RI "Task< int > \fBSaveExpenseAsync\fP (\fBExpense\fP expense, \fBCancellationToken\fP cancellationToken)"
.br
.RI "\fISaves an expense entry \fP"
.ti -1c
.RI "Task< int > \fBDeleteAssignmentAsync\fP (\fBAssignment\fP assignment, \fBCancellationToken\fP cancellationToken)"
.br
.RI "\fIDeletes an assignment \fP"
.ti -1c
.RI "Task< int > \fBDeleteAssignmentItemAsync\fP (\fBAssignmentItem\fP assignmentItem, \fBCancellationToken\fP cancellationToken)"
.br
.RI "\fIDeletes an assignment item \fP"
.ti -1c
.RI "Task< int > \fBDeleteLaborAsync\fP (\fBLabor\fP labor, \fBCancellationToken\fP cancellationToken)"
.br
.RI "\fIDeletes a labor entry \fP"
.ti -1c
.RI "Task< int > \fBDeleteExpenseAsync\fP (\fBExpense\fP expense, \fBCancellationToken\fP cancellationToken)"
.br
.RI "\fIDeletes an expense entry \fP"
.ti -1c
.RI "Task< int > \fBSaveTimerEntryAsync\fP (\fBTimerEntry\fP entry, \fBCancellationToken\fP cancellationToken)"
.br
.RI "\fISaves a timer entry to record an assignment \fP"
.ti -1c
.RI "Task< int > \fBDeleteTimerEntryAsync\fP (\fBTimerEntry\fP entry, \fBCancellationToken\fP cancellationToken)"
.br
.RI "\fIDeletes a timer entry to stop recording an assignment \fP"
.ti -1c
.RI "Task< \fBTimerEntry\fP > \fBGetTimerEntryAsync\fP (\fBCancellationToken\fP cancellationToken)"
.br
.RI "\fIRetrieves the stored timer entry if there was one \fP"
.ti -1c
.RI "Task< List< \fBPhoto\fP > > \fBGetPhotosForAssignmentAsync\fP (\fBAssignment\fP assignment, \fBCancellationToken\fP cancellationToken)"
.br
.RI "\fIRetrieves all the photos for an assignment \fP"
.ti -1c
.RI "Task< int > \fBSavePhotoAsync\fP (\fBPhoto\fP photo, \fBCancellationToken\fP cancellationToken)"
.br
.RI "\fISaves a photo for an assignment \fP"
.ti -1c
.RI "Task< int > \fBDeletePhotoAsync\fP (\fBPhoto\fP photo, \fBCancellationToken\fP cancellationToken)"
.br
.RI "\fIDeletes a photo \fP"
.ti -1c
.RI "Task< List< \fBDocument\fP > > \fBGetDocumentsAsync\fP (\fBCancellationToken\fP cancellationToken)"
.br
.RI "\fIGets the list of available documents \fP"
.ti -1c
.RI "Task< List< \fBAssignmentHistory\fP > > \fBGetAssignmentHistoryAsync\fP (\fBAssignment\fP assignment, \fBCancellationToken\fP cancellationToken)"
.br
.RI "\fIGets the history for an assignment \fP"
.ti -1c
.RI "Task< int > \fBSaveSignatureAsync\fP (\fBSignature\fP signature, \fBCancellationToken\fP cancellationToken)"
.br
.ti -1c
.RI "Task< \fBSignature\fP > \fBGetSignatureAsync\fP (\fBAssignment\fP assignment, \fBCancellationToken\fP cancellationToken)"
.br
.RI "\fIGets a signature for an assignment or null if none \fP"
.ti -1c
.RI "Task< int > \fBSaveExpensePhotoAsync\fP (\fBExpensePhoto\fP photo, \fBCancellationToken\fP cancellationToken)"
.br
.RI "\fISaves a photo for an expense \fP"
.ti -1c
.RI "Task< \fBExpensePhoto\fP > \fBGetExpensePhotoAsync\fP (\fBExpense\fP expense, \fBCancellationToken\fP cancellationToken)"
.br
.RI "\fIGets an expense photo for an expense or null if there is none \fP"
.ti -1c
.RI "Task< List< \fBAssignment\fP > > \fBGetAssignmentFromHistory\fP (\fBAssignmentHistory\fP assignmentHistory, \fBCancellationToken\fP cancellationToken)"
.br
.RI "\fIGets the past assignment \fP"
.in -1c
.SH "Detailed Description"
.PP 
This is just a mock service to bypass the \fBSQLite\fP database for speed during test runs 


.SH "Member Function Documentation"
.PP 
.SS "Task<int> FieldService\&.Tests\&.Mocks\&.MockAssignmentService\&.DeleteAssignmentAsync (\fBAssignment\fPassignment, \fBCancellationToken\fPcancellationToken)"

.PP
Deletes an assignment 
.PP
Implements \fBFieldService\&.IAssignmentService\fP\&.
.SS "Task<int> FieldService\&.Tests\&.Mocks\&.MockAssignmentService\&.DeleteAssignmentItemAsync (\fBAssignmentItem\fPAssignmentItem, \fBCancellationToken\fPcancellationToken)"

.PP
Deletes an assignment item 
.PP
Implements \fBFieldService\&.IAssignmentService\fP\&.
.SS "Task<int> FieldService\&.Tests\&.Mocks\&.MockAssignmentService\&.DeleteExpenseAsync (\fBExpense\fPexpense, \fBCancellationToken\fPcancellationToken)"

.PP
Deletes an expense entry 
.PP
Implements \fBFieldService\&.IAssignmentService\fP\&.
.SS "Task<int> FieldService\&.Tests\&.Mocks\&.MockAssignmentService\&.DeleteLaborAsync (\fBLabor\fPlabor, \fBCancellationToken\fPcancellationToken)"

.PP
Deletes a labor entry 
.PP
Implements \fBFieldService\&.IAssignmentService\fP\&.
.SS "Task<int> FieldService\&.Tests\&.Mocks\&.MockAssignmentService\&.DeletePhotoAsync (\fBPhoto\fPphoto, \fBCancellationToken\fPcancellationToken)"

.PP
Deletes a photo 
.PP
Implements \fBFieldService\&.IAssignmentService\fP\&.
.SS "Task<int> FieldService\&.Tests\&.Mocks\&.MockAssignmentService\&.DeleteTimerEntryAsync (\fBTimerEntry\fPentry, \fBCancellationToken\fPcancellationToken)"

.PP
Deletes a timer entry to stop recording an assignment 
.PP
Implements \fBFieldService\&.IAssignmentService\fP\&.
.SS "Task<List<\fBAssignment\fP> > FieldService\&.Tests\&.Mocks\&.MockAssignmentService\&.GetAssignmentFromHistory (\fBAssignmentHistory\fPassignmentHistory, \fBCancellationToken\fPcancellationToken)"

.PP
Gets the past assignment 
.PP
Implements \fBFieldService\&.IAssignmentService\fP\&.
.SS "Task<List<\fBAssignmentHistory\fP> > FieldService\&.Tests\&.Mocks\&.MockAssignmentService\&.GetAssignmentHistoryAsync (\fBAssignment\fPassignment, \fBCancellationToken\fPcancellationToken)"

.PP
Gets the history for an assignment 
.PP
Implements \fBFieldService\&.IAssignmentService\fP\&.
.SS "Task<List<\fBAssignment\fP> > FieldService\&.Tests\&.Mocks\&.MockAssignmentService\&.GetAssignmentsAsync (\fBCancellationToken\fPcancellationToken)"

.PP
Gets a list of assignments 
.PP
Implements \fBFieldService\&.IAssignmentService\fP\&.
.SS "Task<List<\fBDocument\fP> > FieldService\&.Tests\&.Mocks\&.MockAssignmentService\&.GetDocumentsAsync (\fBCancellationToken\fPcancellationToken)"

.PP
Gets the list of available documents 
.PP
Implements \fBFieldService\&.IAssignmentService\fP\&.
.SS "Task<\fBExpensePhoto\fP> FieldService\&.Tests\&.Mocks\&.MockAssignmentService\&.GetExpensePhotoAsync (\fBExpense\fPexpense, \fBCancellationToken\fPcancellationToken)"

.PP
Gets an expense photo for an expense or null if there is none 
.PP
Implements \fBFieldService\&.IAssignmentService\fP\&.
.SS "Task<List<\fBExpense\fP> > FieldService\&.Tests\&.Mocks\&.MockAssignmentService\&.GetExpensesForAssignmentAsync (\fBAssignment\fPassignment, \fBCancellationToken\fPcancellationToken)"

.PP
Gets a list of expenses for an assignment 
.PP
Implements \fBFieldService\&.IAssignmentService\fP\&.
.SS "Task<List<\fBItem\fP> > FieldService\&.Tests\&.Mocks\&.MockAssignmentService\&.GetItemsAsync (\fBCancellationToken\fPcancellationToken)"

.PP
Gets a list of items 
.PP
Implements \fBFieldService\&.IAssignmentService\fP\&.
.SS "Task<List<\fBAssignmentItem\fP> > FieldService\&.Tests\&.Mocks\&.MockAssignmentService\&.GetItemsForAssignmentAsync (\fBAssignment\fPassignment, \fBCancellationToken\fPcancellationToken)"

.PP
Gets a list of items for an assignment 
.PP
Implements \fBFieldService\&.IAssignmentService\fP\&.
.SS "Task<List<\fBLabor\fP> > FieldService\&.Tests\&.Mocks\&.MockAssignmentService\&.GetLaborForAssignmentAsync (\fBAssignment\fPassignment, \fBCancellationToken\fPcancellationToken)"

.PP
Gets a list of labor hours for an assignment 
.PP
Implements \fBFieldService\&.IAssignmentService\fP\&.
.SS "Task<List<\fBPhoto\fP> > FieldService\&.Tests\&.Mocks\&.MockAssignmentService\&.GetPhotosForAssignmentAsync (\fBAssignment\fPassignment, \fBCancellationToken\fPcancellationToken)"

.PP
Retrieves all the photos for an assignment 
.PP
Implements \fBFieldService\&.IAssignmentService\fP\&.
.SS "Task<\fBSignature\fP> FieldService\&.Tests\&.Mocks\&.MockAssignmentService\&.GetSignatureAsync (\fBAssignment\fPassignment, \fBCancellationToken\fPcancellationToken)"

.PP
Gets a signature for an assignment or null if none 
.PP
Implements \fBFieldService\&.IAssignmentService\fP\&.
.SS "Task<\fBTimerEntry\fP> FieldService\&.Tests\&.Mocks\&.MockAssignmentService\&.GetTimerEntryAsync (\fBCancellationToken\fPcancellationToken)"

.PP
Retrieves the stored timer entry if there was one 
.PP
Implements \fBFieldService\&.IAssignmentService\fP\&.
.SS "Task<int> FieldService\&.Tests\&.Mocks\&.MockAssignmentService\&.SaveAssignmentAsync (\fBAssignment\fPassignment, \fBCancellationToken\fPcancellationToken)"

.PP
Saves an assignment 
.PP
Implements \fBFieldService\&.IAssignmentService\fP\&.
.SS "Task<int> FieldService\&.Tests\&.Mocks\&.MockAssignmentService\&.SaveAssignmentItemAsync (\fBAssignmentItem\fPassignmentItem, \fBCancellationToken\fPcancellationToken)"

.PP
Saves an assignment item 
.PP
Implements \fBFieldService\&.IAssignmentService\fP\&.
.SS "Task<int> FieldService\&.Tests\&.Mocks\&.MockAssignmentService\&.SaveExpenseAsync (\fBExpense\fPexpense, \fBCancellationToken\fPcancellationToken)"

.PP
Saves an expense entry 
.PP
Implements \fBFieldService\&.IAssignmentService\fP\&.
.SS "Task<int> FieldService\&.Tests\&.Mocks\&.MockAssignmentService\&.SaveExpensePhotoAsync (\fBExpensePhoto\fPphoto, \fBCancellationToken\fPcancellationToken)"

.PP
Saves a photo for an expense 
.PP
Implements \fBFieldService\&.IAssignmentService\fP\&.
.SS "Task<int> FieldService\&.Tests\&.Mocks\&.MockAssignmentService\&.SaveLaborAsync (\fBLabor\fPlabor, \fBCancellationToken\fPcancellationToken)"

.PP
Saves a labor entry 
.PP
Implements \fBFieldService\&.IAssignmentService\fP\&.
.SS "Task<int> FieldService\&.Tests\&.Mocks\&.MockAssignmentService\&.SavePhotoAsync (\fBPhoto\fPphoto, \fBCancellationToken\fPcancellationToken)"

.PP
Saves a photo for an assignment 
.PP
Implements \fBFieldService\&.IAssignmentService\fP\&.
.SS "Task<int> FieldService\&.Tests\&.Mocks\&.MockAssignmentService\&.SaveSignatureAsync (\fBSignature\fPsignature, \fBCancellationToken\fPcancellationToken)"

.SS "Task<int> FieldService\&.Tests\&.Mocks\&.MockAssignmentService\&.SaveTimerEntryAsync (\fBTimerEntry\fPentry, \fBCancellationToken\fPcancellationToken)"

.PP
Saves a timer entry to record an assignment 
.PP
Implements \fBFieldService\&.IAssignmentService\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
